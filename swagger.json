{
    "openapi": "3.0.1",
    "info": {
        "version": "2.0.2",
        "title": "Swagger test",
        "description": "Showing off swagger-ui-express",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "http://localhost:3030"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "Users endpoints"
        },
        {
            "name": "Transaction",
            "description": "Transactions endpoints"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user credentials and return created user accaunt",
                "parameters": [
                    {
                        "in": "path",
                        "name": "signup",
                        "required": "true",
                        "type": "string",
                        "description": "User's email, password and name"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registred success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка от Joi или другой библиотеки валидации",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticate user credentials and return user acaunt details with a JWT token and a refresh token",
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "required": "true",
                        "type": "string",
                        "description": "User's email"
                    },
                    {
                        "in": "path",
                        "name": "password",
                        "required": "true",
                        "type": "string",
                        "description": "User's password"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login in system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка от Joi или другой библиотеки валидации",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "204": {
                        "description": "Logout in system success"
                    },
                    "400": {
                        "description": "No token provided",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Invalid user / Invalid session",
                        "content": {}
                    }
                }
            }
        },
        "/auth/current": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get current user info",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user in system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Use a refresh token to generate a new JWT token and a new refresh token",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "RefreshToken object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New pair of tokens created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Token",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (invalid refresh token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Invalid user / Invalid session",
                        "content": {}
                    }
                }
            }
        },
        "/transactions/add": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transactions current user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": "true",
                        "type": "string",
                        "description": "Transaction's type (expense or income)"
                    },
                    {
                        "in": "path",
                        "name": "category",
                        "required": "true",
                        "type": "string",
                        "description": "Transaction's category(Основной,Еда,Авто,Развитие,Дети,Дом,Образование,Остальные)"
                    },{
                        "in": "path",
                        "name": "sum",
                        "required": "true",
                        "type": "integer",
                        "description": "Sum expense at one transaction"
                    },
                    {
                        "in": "path",
                        "name": "comment",
                        "required": "true",
                        "type": "string",
                        "description": "Transaction's comment"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Transaction's object added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/listTransactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all transactions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "That's all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/statistics": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Statistics about all transaction",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Statistics all transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatisticsTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/categories": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Transactions categories",
                "responses": {
                    "200": {
                        "description": "Transaction's categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoriesTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/:transactionId/getById": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction by transactionId",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetByIdTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/:transactionId/removeById": {
            "delete": {
                "tags": [
                    "Transaction"
                ]
            },
            "summary": "Get transactions current user",
            "parameters": [],
            "requestBody": {
                "description": "Registration's object",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RemoveTransactionRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "That's all transactions",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveTransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/:transactionId/updateById": {
            "put": {
                "tags": [
                    "Transaction"
                ]
            },
            "summary": "Update transaction by transactionId",
            "parameters": [],
            "requestBody": {
                "description": "Registration's object",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateByIdTransactionRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "That's all transactions",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateByIdTransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/:transactionId/favorite": {
            "patch": {
                "tags": [
                    "Transaction"
                ]
            },
            "summary": "Get transactions current user",
            "parameters": [],
            "requestBody": {
                "description": "Registration's object",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FavoriteTransactionRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "That's all transactions",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FavoriteTransactionResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "name"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Nicole"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "items": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "User's email",
                            "format": "email"
                        },
                        "name": {
                            "type": "string",
                            "description": "User's name",
                            "example": "Adam"
                        },
                        "id": {
                            "type": "string",
                            "description": "User's id",
                            "example": "618f8f43a4c9adfc00d3a5a3"
                        }
                    }
                },
                "example": {
                    "status": "success",
                    "code": 201,
                    "message": "Registred success",
                    "result": {
                        "email": "wallet@mail.ru",
                        "name": "Nicole",
                        "balance": 0,
                        "token": null,
                        "refreshToken": null,
                        "refreshTokenConection": null,
                        "_id": "618f8f43a4c9adfc00d3a5a3",
                        "password": "$2a$10$ctY7EDZMpSy3VfGDJj06f.m8Qz7WvJgE50VoGZUdxPhbYmvF1XdGy",
                        "createdAt": "2021-11-13T10:11:16.118Z",
                        "updatedAt": "2021-11-13T10:11:16.118Z"
                    }
                }
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status token",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "200"
                    },
                    "token": {
                        "type": "string",
                        "description": "Session's access token (needed for all requests)",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOGY4ZjQzYTRjOWFkZmMwMGQzYTVhMyIsImlhdCI6MTYzNjgwMDM2MiwiZXhwIjoxNjM2ODAxMjYyfQ.LdIGRZPx6uVbwmhCm9-7BBxVdX9m4sMBfTMH71i-5x8"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Session's access token (needed for /auth/refreshToken)",
                        "example": "b1e32581a4d98e815fd24cc63243cc7283f27da65edd6f92958ef98386b551a664f3b7c065f3c3c8"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "User's id",
                                "example": "618f8f43a4c9adfc00d3a5a3"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Nicole"
                            },
                            "balance": {
                                "type": "integer",
                                "description": "User's balance",
                                "example": "0"
                            },
                            "token": {
                                "type": "string",
                                "description": "Session's access token (needed for all requests)",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOGY4ZjQzYTRjOWFkZmMwMGQzYTVhMyIsImlhdCI6MTYzNjgwMDM2MiwiZXhwIjoxNjM2ODAxMjYyfQ.LdIGRZPx6uVbwmhCm9-7BBxVdX9m4sMBfTMH71i-5x8"
                            },
                            "refreshToken": {
                                "type": "string",
                                "description": "Session's access token (needed for /auth/refreshToken)",
                                "example": "b1e32581a4d98e815fd24cc63243cc7283f27da65edd6f92958ef98386b551a664f3b7c065f3c3c8"
                            },
                            "refreshTokenConection": {
                                "type": "string",
                                "description": "Session's access new refresh token",
                                "example": "618f976ac652013c409d20d4"
                            },
                            "password": {
                                "type": "string",
                                "description": "User's password",
                                "example": "$2a$10$ctY7EDZMpSy3VfGDJj06f.m8Qz7WvJgE50VoGZUdxPhbYmvF1XdGy"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "Time create login",
                                "example": "2021-11-13T10:11:16.118Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "description": "Time update login",
                                "example": "2021-11-13T10:46:02.612Z"
                            }
                        }
                    }
                }
            },
            "CurrentUserResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status token",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "200"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "User's id",
                                "example": "618f8f43a4c9adfc00d3a5a3"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Nicole"
                            },
                            "balance": {
                                "type": "integer",
                                "description": "User's balance",
                                "example": "2194"
                            }
                        }
                    }
                }
            },
            "RefreshTokenRequest": {
                "type": "object",
                "properties": {
                    "refreshTokenConection": {
                        "type": "string",
                        "description": "Session's ('refreshTokenConection' field after authentication)",
                        "example": "618f976ac652013c409d20d4"
                    }
                }
            },
            "RefreshTokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Access token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOGY4ZjQzYTRjOWFkZmMwMGQzYTVhMyIsImlhdCI6MTYzNjgwMDM2MiwiZXhwIjoxNjM2ODAxMjYyfQ.LdIGRZPx6uVbwmhCm9-7BBxVdX9m4sMBfTMH71i-5x8"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Refresh token",
                        "example": "b1e32581a4d98e815fd24cc63243cc7283f27da65edd6f92958ef98386b551a664f3b7c065f3c3c8"
                    },
                    "refreshTokenConection": {
                        "type": "string",
                        "description": "New session's id",
                        "example": "618f976ac652013c409d20d4"
                    }
                }
            },
            "AddTransactionRequest": {
                "required": [
                    "type",
                    "category",
                    "sum",
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Transaction's expense or income",
                        "example": "expense"
                    },
                    "category": {
                        "type": "string",
                        "description": "Transaction's categories",
                        "example": "Основной"
                    },
                    "sum": {
                        "type": "integer",
                        "description": "Transaction's sum for expense or income",
                        "example": "6"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for add new transaction",
                        "example": "Surprise wive"
                    }
                }
            },
            "AddTransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status added transaction",
                        "example": "successfully created"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "201"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Transaction's type",
                                        "example": "expense"
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Transaction's categories",
                                        "example": "Основной"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "description": "Transaction's sum for expense or income",
                                        "example": "6"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "description": "Comment for add new transaction",
                                        "example": "Surprise wive"
                                    },
                                    "date": {
                                        "type": "string",
                                        "description": "Transaction's date",
                                        "example": "14.11.21"
                                    },
                                    "month": {
                                        "type": "integer",
                                        "description": "Transaction's month",
                                        "example": "11"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "description": "Transaction's yaer",
                                        "example": "2021"
                                    },
                                    "balance": {
                                        "type": "integer",
                                        "description": "Main balanse after transaction",
                                        "example": "3994"
                                    },
                                    "owner": {
                                        "type": "string",
                                        "description": "Transaction's owner(userId)",
                                        "example": "2021"
                                    },
                                    "_id": {
                                        "type": "string",
                                        "description": "Transaction's id",
                                        "example": "61911b8b75ac23b9efa47ffd"
                                    },
                                    "createdAt": {
                                        "type": "string",
                                        "description": "Time create transaction",
                                        "example": "2021-11-14T14:22:03.596Z"
                                    },
                                    "updatedAt": {
                                        "type": "string",
                                        "description": "Time update transaction",
                                        "example": "2021-11-14T14:22:03.596Z"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CategoriesTransactionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "description": "Main categories your transactions",
                        "example": [
                            "Основной",
                            "Еда",
                            "Авто",
                            "Развитие",
                            "Дети",
                            "Дом",
                            "Образование",
                            "Остальные"
                        ]
                    }
                }
            },
            "StatisticsTransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status for getting statistics transactions",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "200"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "income": {
                                "type": "integer",
                                "description": "Transaction's income",
                                "example": "0"
                            },
                            "expenseAll": {
                                "type": "integer",
                                "description": "All expense",
                                "example": "1806"
                            },
                            "expenseCategory": {
                                "type": "object",
                                "properties": {
                                    "Basic": {
                                        "type": "integer",
                                        "description": "Expense's basic",
                                        "example": "6"
                                    },
                                    "Food": {
                                        "type": "integer",
                                        "description": "Expense's food",
                                        "example": "0"
                                    },
                                    "Auto": {
                                        "type": "integer",
                                        "description": "Expense's auto",
                                        "example": "1000"
                                    },
                                    "Development": {
                                        "type": "integer",
                                        "description": "Expense's development",
                                        "example": "0"
                                    },
                                    "Children": {
                                        "type": "integer",
                                        "description": "Expense's children",
                                        "example": "0"
                                    },
                                    "Home": {
                                        "type": "integer",
                                        "description": "Expense's home",
                                        "example": "350"
                                    },
                                    "Education": {
                                        "type": "integer",
                                        "description": "Expense's education",
                                        "example": "450"
                                    },
                                    "Others": {
                                        "type": "integer",
                                        "description": "Expense's others",
                                        "example": "0"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "GetByIdTransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status added transaction",
                        "example": "successfully created"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "201"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Transaction's type",
                                        "example": "expense"
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Transaction's categories",
                                        "example": "Основной"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "description": "Transaction's sum for expense or income",
                                        "example": "6"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "description": "Comment for add new transaction",
                                        "example": "Surprise wive"
                                    },
                                    "date": {
                                        "type": "string",
                                        "description": "Transaction's date",
                                        "example": "14.11.21"
                                    },
                                    "month": {
                                        "type": "integer",
                                        "description": "Transaction's month",
                                        "example": "11"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "description": "Transaction's yaer",
                                        "example": "2021"
                                    },
                                    "balance": {
                                        "type": "integer",
                                        "description": "Main balanse after transaction",
                                        "example": "3994"
                                    },
                                    "owner": {
                                        "type": "string",
                                        "description": "Transaction's owner(userId)",
                                        "example": "2021"
                                    },
                                    "_id": {
                                        "type": "string",
                                        "description": "Transaction's id",
                                        "example": "61911b8b75ac23b9efa47ffd"
                                    },
                                    "createdAt": {
                                        "type": "string",
                                        "description": "Time create transaction",
                                        "example": "2021-11-14T14:22:03.596Z"
                                    },
                                    "updatedAt": {
                                        "type": "string",
                                        "description": "Time update transaction",
                                        "example": "2021-11-14T14:22:03.596Z"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ListTransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "All transactions",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "Status code",
                        "example": "200"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "transactions": {
                                "type": "array",
                                "description": "All transactions for all time",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "Transaction's id",
                                            "example": "61911b8b75ac23b9efa47ffd"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Transaction's type",
                                            "example": "expense"
                                        },
                                        "category": {
                                            "type": "string",
                                            "description": "Transaction's categories",
                                            "example": "Основной"
                                        },
                                        "sum": {
                                            "type": "integer",
                                            "description": "Transaction's sum for expense or income",
                                            "example": "6"
                                        },
                                        "comment": {
                                            "type": "string",
                                            "description": "Comment for add new transaction",
                                            "example": "Surprise wive"
                                        },
                                        "date": {
                                            "type": "string",
                                            "description": "Transaction's date",
                                            "example": "14.11.21"
                                        },
                                        "month": {
                                            "type": "integer",
                                            "description": "Transaction's month",
                                            "example": "11"
                                        },
                                        "year": {
                                            "type": "integer",
                                            "description": "Transaction's yaer",
                                            "example": "2021"
                                        },
                                        "balance": {
                                            "type": "integer",
                                            "description": "Main balanse after transaction",
                                            "example": "3994"
                                        },
                                        "owner": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string",
                                                    "description": "Transaction's owner(userId)",
                                                    "example": "618f8f43a4c9adfc00d3a5a3"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "Transaction's owner(userId)",
                                                    "format": "email"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "status": "success",
                    "code": 200,
                    "data": {
                        "transactions": [
                            {
                                "_id": "61911b8b75ac23b9efa47ffd",
                                "type": "expense",
                                "category": "Основной",
                                "sum": 6,
                                "comment": "Surprise wive",
                                "date": "14.11.21",
                                "month": 11,
                                "year": 2021,
                                "balance": "3994",
                                "owner": {
                                    "_id": "618f8f43a4c9adfc00d3a5a3",
                                    "email": "wallet@mail.ru"
                                }
                            },
                            {
                                "_id": "61913c120b05e98cb1b555b3",
                                "type": "expense",
                                "category": "Дом",
                                "sum": 300,
                                "comment": "Kitchen",
                                "date": "14.11.21",
                                "month": 11,
                                "year": 2021,
                                "balance": "3694",
                                "owner": {
                                    "_id": "618f8f43a4c9adfc00d3a5a3",
                                    "email": "wallet@mail.ru"
                                }
                            },
                            {
                                "_id": "61913c510b05e98cb1b555b7",
                                "type": "expense",
                                "category": "Образование",
                                "sum": 450,
                                "comment": "Course IT",
                                "date": "14.11.21",
                                "month": 11,
                                "year": 2021,
                                "balance": "3244",
                                "owner": {
                                    "_id": "618f8f43a4c9adfc00d3a5a3",
                                    "email": "wallet@mail.ru"
                                }
                            },
                            {
                                "_id": "61913d360b05e98cb1b555bb",
                                "type": "expense",
                                "category": "Авто",
                                "sum": 1000,
                                "comment": "New engine in car",
                                "date": "14.11.21",
                                "month": 11,
                                "year": 2021,
                                "balance": "2244",
                                "owner": {
                                    "_id": "618f8f43a4c9adfc00d3a5a3",
                                    "email": "wallet@mail.ru"
                                }
                            }
                        ]
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}